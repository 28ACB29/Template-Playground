@model TemplatePlayground.Models.Test

@{
	/**/

	ViewBag.Title = "Create";
}

<h2>Create</h2>


@using(Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Test</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			@Html.LabelFor(model => model.Bool, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<div class="checkbox">
					@Html.EditorFor(model => model.Bool)
					@Html.ValidationMessageFor(model => model.Bool, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Byte, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Byte, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Byte, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Char, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Char, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Char, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DateTime, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.DateTime, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.DateTime, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Decimal, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Decimal, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Decimal, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Double, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Double, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Double, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Float, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Float, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Float, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Int, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Int, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Int, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Long, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Long, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Long, "", new { @class = "text-danger" })
			</div>
		</div>

		@*<div class="form-group">
			@Html.LabelFor(model => model.Sbyte, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Sbyte, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Sbyte, "", new { @class = "text-danger" })
			</div>
		</div>*@

		<div class="form-group">
			@Html.LabelFor(model => model.Short, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Short, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Short, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Uint, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Uint, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Uint, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Ulong, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Ulong, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Ulong, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Ushort, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Ushort, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Ushort, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Create" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts
{
	@Scripts.Render("~/bundles/jqueryval")
}
